name: 'Tests'

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  DB_TYPE: postgres
  DB_PORT: 5432
  DB_HOST: 127.0.0.1
  DB_LOCAL_HOST: localhost
  DB_NAME: testdb
  DB_USERNAME: pguser
  DB_PASSWORD: pguser
  REDIS_URI: redis://127.0.0.1:6379
  NEXT_PUBLIC_BACKEND_HOST: localhost
  NEXT_PUBLIC_BACKEND_PORT: 8000
  BACKEND_PORT: 8000
  FRONTEND_PORT: 3000
  JWT_SECRET: hzlol
  JWT_EXPERATION_TIME: 1m
  WATCHPACK_POLLING: true
  AWS_ACCESS_KEY: test
  AWS_SECRET_KEY: test
  S3_BUCKET_REGION: us-east-1
  S3_BUCKET_NAME: static-files-bucket-quotes

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.DB_NAME  }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          LAMBDA_DOCKER_NETWORK: bridge
          AWS_DEFAULT_REGION: us-east-1
          DEBUG: 1

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Pull Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install shx
        run: npm install -g shx
      - name: Init project
        run: npm run init
      - name: Run e2e tests
        working-directory: ./backend
        run: npm run test:e2e
